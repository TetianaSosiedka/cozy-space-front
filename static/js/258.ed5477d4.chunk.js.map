{"version":3,"file":"static/js/258.ed5477d4.chunk.js","mappings":"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","sources":["components/App/App.styled.jsx","components/TextField/TextField.styled.jsx","components/TextField/TextField.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","constants/countries.js","constants/regions.js","helpers/ValidationShemas.js","helpers/cleaningObject.js","pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["export const UnderlineAfter = `\n  content: '';\n  position: absolute;\n  bottom: -3px;\n  left: 0;\n  width: 100%;\n  height: 2px;\n  transform: scaleX(0);\n  transform-origin: bottom left;\n  transition: transform 0.5s ease-out;\n   `;\n","import styled from 'styled-components';\nimport { TextField } from '@mui/material';\n\nexport const TextFieldStyle = styled(TextField)`\n  input {\n    font-family: ${props => props.theme.fonts.body};\n    font-size: 15px;\n  }\n  label {\n    font-family: ${props => props.theme.fonts.headers};\n    font-weight: 700;\n    font-size: 14px;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.accentActive};\n  }\n  label.Mui-focused {\n    color: ${props => props.theme.colors.accent};\n  }\n  .MuiInput-underline:after {\n    border-bottom-color: ${props => props.theme.colors.accentActive};\n  }\n  .MuiOutlinedInput-root {\n    fieldset {\n      border-color: ${props => props.theme.colors.accentRed};\n    }\n    :hover fieldset {\n      border-color: yellow;\n    }\n    .Mui-focused fieldset {\n      border-color: ${props => props.theme.colors.accentActive};\n    }\n  }\n`;\n","import React from 'react';\n\nimport { TextFieldStyle } from './TextField.styled';\nimport { IMaskInput } from 'react-imask';\n\nconst TextMaskCustom = React.forwardRef(function TextMaskCustom(props, ref) {\n  const { onChange, ...other } = props;\n  return (\n    <IMaskInput\n      {...other}\n      mask=\"+38(#00) 000-0000\"\n      definitions={{\n        '#': /[0-9]/,\n      }}\n      inputRef={ref}\n      onAccept={value => onChange({ target: { name: props.name, value } })}\n      overwrite\n    />\n  );\n});\n\nconst TextField = ({\n  variant = 'standard',\n  id = 'text',\n  label = 'text',\n  type = '',\n  value = '',\n  name,\n  placeholder = '',\n  onChange,\n  onBlur,\n  error = false,\n  helperText = '',\n  select = '',\n  multiline,\n  rows = 1,\n  children,\n}) => {\n  return (\n    <>\n      {id !== 'phone' && !select && (\n        <TextFieldStyle\n          variant={variant}\n          fullWidth\n          id={id}\n          label={label}\n          type={type}\n          value={value}\n          placeholder={placeholder}\n          onChange={onChange}\n          onBlur={onBlur}\n          error={error}\n          helperText={helperText}\n          multiline\n          rows={rows}\n        />\n      )}\n      {select && (\n        <TextFieldStyle\n          variant={variant}\n          fullWidth\n          id={id}\n          label={label}\n          type={type}\n          select={select}\n          value={value}\n          placeholder={placeholder}\n          onChange={onChange}\n          onBlur={onBlur}\n          error={error}\n          helperText={helperText}\n          name={name}\n        >\n          {children}\n        </TextFieldStyle>\n      )}\n      {id === 'phone' && (\n        <TextFieldStyle\n          variant={variant}\n          fullWidth\n          id={id}\n          label={label}\n          type={type}\n          value={value}\n          name={name}\n          placeholder={placeholder}\n          onChange={onChange}\n          onBlur={onBlur}\n          error={error}\n          helperText={helperText}\n          InputProps={{ inputComponent: TextMaskCustom }}\n        />\n      )}\n    </>\n  );\n};\n\nexport default TextField;\n","import styled from 'styled-components';\n\nexport const TitleStyle = styled.span`\n  display: inline-block;\n  margin-top: 50px;\n  font-size: 25px;\n  font-weight: 700;\n  letter-spacing: 0.02em;\n  font-family: ${props => props.theme.fonts.headers};\n  color: ${props => props.theme.colors.accentActive};\n  @media ${props => props.theme.screens.tablet} {\n    font-size: 30px;\n  }\n`;\n\nexport const Line = styled.div`\n  margin-top: 20px;\n  width: 100%;\n  height: 2px;\n  background-color: ${props => props.theme.colors.accent};\n`;\n","import { TitleStyle, Line } from './Title.styled';\n\nconst Title = ({ children }) => {\n  return (\n    <>\n      <TitleStyle>{children}</TitleStyle>\n      <Line />\n    </>\n  );\n};\n\nexport default Title;\n","export const countries = [\n  {\n    value: 'Ukraine',\n    label: 'Україна',\n  },\n];\n","export const regions = [\n  {\n    value: 'AK',\n    label: 'АР Крим',\n  },\n  {\n    value: 'AB',\n    label: 'Вінницька область',\n  },\n  {\n    value: 'AC',\n    label: 'Волинська область',\n  },\n  {\n    value: 'AE',\n    label: 'Дніпропетровська область',\n  },\n  {\n    value: 'AH',\n    label: 'Донецька область',\n  },\n  {\n    value: 'AM',\n    label: 'Житомирська область',\n  },\n  {\n    value: 'AO',\n    label: 'Закарпатська область',\n  },\n  {\n    value: 'AP',\n    label: 'Запорізька область',\n  },\n  {\n    value: 'AT',\n    label: 'Івано-Франківська область',\n  },\n  {\n    value: 'AI',\n    label: 'Київська область',\n  },\n  {\n    value: 'BA',\n    label: 'Кіровоградська область',\n  },\n  {\n    value: 'BB',\n    label: 'Луганська область',\n  },\n  {\n    value: 'BC',\n    label: 'Львівська область',\n  },\n  {\n    value: 'BE',\n    label: 'Миколаївська область',\n  },\n  {\n    value: 'BH',\n    label: 'Одеська область',\n  },\n  {\n    value: 'BI',\n    label: 'Полтавська область',\n  },\n  {\n    value: 'BK',\n    label: 'Рівненська область',\n  },\n  {\n    value: 'BM',\n    label: 'Сумська область',\n  },\n  {\n    value: 'BO',\n    label: 'Тернопільська область',\n  },\n  {\n    value: 'AX',\n    label: 'Харківська область',\n  },\n  {\n    value: 'BT',\n    label: 'Херсонська область',\n  },\n  {\n    value: 'BX',\n    label: 'Хмельницька область',\n  },\n  {\n    value: 'CA',\n    label: 'Черкаська область',\n  },\n  {\n    value: 'CB',\n    label: 'Чернігівська область',\n  },\n  {\n    value: 'CE',\n    label: 'Чернівецька область',\n  },\n];\n\n/*\n\nАР Крим\t01\tAK\nВінницька область\t02\tAB\nВолинська область\t03\tAC\nДніпропетровська область\t04\tAE\nДонецька область\t05\tAH\nЖитомирська область\t06\tAM\nЗакарпатська область\t07\tAO\nЗапорізька область\t08\tAP\nІвано-Франківська область\t09\tAT\nКиївська область\t10\tAI\nм. Київ\t11\tAA\nКіровоградська область\t12\tBA\nЛуганська область\t13\tBB\nЛьвівська область\t14\tBC\nМиколаївська область\t15\tBE\nОдеська область\t16\tBH\nПолтавська область\t17\tBI\nРівненська область\t18\tBK\nСумська область\t19\tBM\nТернопільська область\t20\tBO\nХарківська область\t21\tAX\nХерсонська область\t22\tBT\nХмельницька область\t23\tBX\nЧеркаська область\t24\tCA\nЧернігівська область\t25\tCB\nЧернівецька область\t26\tCE\n*/\n","import * as yup from 'yup';\n\nconst passwordRules = /^.*(?=.{6,})((?=.*\\d){1})((?=.*[a-z]){1}).*$/;\n\nconst number = /^[0123456789]*$/;\n\nexport const LoginSchema = yup.object({\n  email: yup\n    .string('Введіть адресу електронної пошти')\n    .email('Введіть валідну адресу електронної пошти')\n    .required(\"Поле обов'язкове для заповнення\"),\n  password: yup\n    .string('Введіть пароль')\n    .min(6, 'Пароль має бути мінімум 6 символів')\n    .matches(passwordRules, 'Пароль має містити букви і числа')\n    .required(\"Поле обов'язкове для заповнення\"),\n});\n\nexport const RegisterSchema = yup.object({\n  email: yup\n    .string('Введіть адресу електронної пошти')\n    .email('Введіть валідну адресу електронної пошти')\n    .required(\"Поле обов'язкове для заповнення\"),\n\n  password: yup\n    .string('Введіть пароль')\n    .min(6, 'Пароль має бути мінімум 6 символів')\n    .matches(passwordRules, 'Пароль має містити букви і числа')\n    .required(\"Поле обов'язкове для заповнення\"),\n\n  confirmPassword: yup\n    .string('Повторіть пароль')\n    .oneOf([yup.ref('password'), null], 'пароль має співпадати')\n    .required(\"Поле обов'язкове для заповнення\"),\n\n  name: yup\n    .string(\"Введіть ім'я\")\n    .min(2, \"Ім'я має містити мінімум 2 символа\")\n    .required(\"Поле обов'язкове для заповнення\"),\n\n  surname: yup\n    .string('Введіть прізвище')\n    .required(\"Поле обов'язкове для заповнення\"),\n\n  phone: yup\n    .string('Введіть номер телефона')\n    .min(17, 'Телефон має містити 10 цифр')\n    .required(\"Поле обов'язкове для заповнення\"),\n\n  country: yup.string(),\n\n  region: yup.string(),\n\n  city: yup\n    .string('Введіть назву міста')\n    .min(2, 'Назва міста має містити мінімум 2 символа'),\n\n  index: yup\n    .string('Введіть індекс')\n    .length(5, 'Індекс має складатися з 5 цифр')\n    .matches(number, 'Індекс не може містити щось, крім цифр'),\n\n  post: yup\n    .string('Введіть номер відділення Нової пошти')\n    .matches(\n      number,\n      'Номер відділення Нової пошти не може містити щось, крім цифр'\n    ),\n});\n\nexport const AddProductSchema = yup.object({\n  title: yup\n    .string('Введіть заголовок')\n    .required(\"Поле ЗАГОЛОВОК обов'язкове для заповнення\"),\n  name: yup\n    .string('Введіть назву товара')\n    .required(\"Поле Назва товару обов'язкове для заповнення\"),\n  price: yup\n    .string('Введіть ціну товара')\n    .matches(number, 'Ціна не може містити щось, крім цифр')\n    .required(\"Поле ЦІНА товару обов'язкове для заповнення\"),\n  volume: yup\n    .string(\"Введіть об'ем товара\")\n    .matches(number, 'Обьем не може містити щось, крім цифр')\n    .required(\"Поле О'ЄМ обов'язкове для заповнення\"),\n  brand: yup\n    .string('Введіть назву бренда')\n    .required(\"Поле БРЕНД обов'язкове для заповнення\"),\n  categorie: yup\n    .string('')\n    .required(\"Поле КАТЕГОРІЯ обов'язкове для заповнення\"),\n  markers: yup.array().required('Оберіть маркери товару'),\n  new: yup.bool(),\n  available: yup.bool(),\n  shortDescription: yup\n    .string('Введіть стислий опис товару')\n    .required(\"Поле СТИСЛИЙ ОПИС обов'язкове для заповнення\"),\n  fullDescription: yup\n    .string('Введіть повний опис товару')\n    .required(\"Поле ПОВНИЙ ОПИС обов'язкове для заповнення\"),\n});\n","export function cleaningObject(obj) {\n  for (let propName in obj) {\n    if (\n      obj[propName] === null ||\n      obj[propName] === undefined ||\n      obj[propName] === ''\n    ) {\n      delete obj[propName];\n    }\n  }\n  return obj;\n}\n","import styled from 'styled-components';\nimport { UnderlineAfter } from 'components/App/App.styled';\n\nexport const WarningMessage = styled.p`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  font-family: ${props => props.theme.fonts.body};\n  font-size: 14px;\n  a {\n    display: inline-block;\n    position: relative;\n    color: ${props => props.theme.colors.accent};\n    ::after {\n      ${UnderlineAfter};\n      background-color: ${props => props.theme.colors.accent};\n    }\n\n    :hover,\n    :focus {\n      ::after {\n        transform: scaleX(1);\n        transform-origin: bottom left;\n        transition: transform 0.5s ease-out;\n      }\n    }\n  }\n`;\n\nexport const FormsContainer = styled.div`\n  position: relative;\n`;\n\nexport const RegisterForm = styled.form`\n  width: 100%;\n  margin-bottom: 60px;\n  .css-wb57ya-MuiFormControl-root-MuiTextField-root {\n    margin-bottom: 10px;\n  }\n  button {\n    margin-top: 20px;\n    width: auto;\n  }\n  @media ${props => props.theme.screens.tablet} {\n    margin-top: 40px;\n  }\n`;\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport MenuItem from '@mui/material/MenuItem';\nimport { RegisterSchema } from 'helpers/ValidationShemas';\nimport { useRegisterMutation } from 'redux/Auth/authApi';\nimport { cleaningObject } from 'helpers/cleaningObject.js';\n\nimport Container from 'components/Container/Container';\nimport Footer from 'components/Footer/Footer';\nimport Title from 'components/Title/Title';\nimport TextField from 'components/TextField/TextField.jsx';\nimport { countries } from 'constants/countries.js';\nimport { regions } from 'constants/regions.js';\nimport Button from 'components/Button/Button.jsx';\n\nimport {\n  WarningMessage,\n  FormsContainer,\n  RegisterForm,\n} from './RegisterPage.styled.jsx';\n\nconst RegisterPage = () => {\n  const [\n    register /*,\n    {\n      isError, isLoading, isSuccess\n    },*/,\n    res,\n  ] = useRegisterMutation();\n  const [finishFirstForm, setFinishFirstForm] = useState(false);\n\n  const firstRegisterForm =\n    document.getElementsByClassName('firstRegisterForm')[0];\n  const lastRegisterForm =\n    document.getElementsByClassName('lastRegisterForm')[0];\n\n  const toggleForm = () => {\n    setFinishFirstForm(!finishFirstForm);\n\n    if (!finishFirstForm) {\n      firstRegisterForm.classList.add('visually-hidden');\n      lastRegisterForm.classList.remove('visually-hidden');\n\n      return;\n    }\n\n    firstRegisterForm.classList.remove('visually-hidden');\n    lastRegisterForm.classList.add('visually-hidden');\n  };\n\n  const onSubmit = async ({ confirmPassword, ...restValues }) => {\n    if (finishFirstForm === true) {\n      restValues.phone = restValues['phone'].replace('-', '').replace(' ', '');\n      const submitValues = cleaningObject(restValues);\n\n      await register(submitValues);\n      console.log(res);\n      return;\n    }\n\n    toggleForm();\n  };\n\n  const handleReturn = () => {\n    toggleForm();\n  };\n\n  const {\n    values,\n    handleSubmit,\n    handleChange,\n    handleBlur,\n    isSubmitting,\n    touched,\n    errors,\n  } = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      name: '',\n      surname: '',\n      phone: '',\n      country: '',\n      region: '',\n      city: '',\n      index: '',\n      post: '',\n    },\n    validationSchema: RegisterSchema,\n    onSubmit,\n  });\n\n  return (\n    <>\n      <Container>\n        <Title>Реєстрація</Title>\n        <WarningMessage>\n          Якщо ви вже зареєстровані, перейдіть на{' '}\n          <Link to=\"/login\">сторінку авторизації</Link>\n        </WarningMessage>\n        <FormsContainer>\n          <RegisterForm\n            className=\"firstRegisterForm\"\n            onSubmit={handleSubmit}\n            autoComplete=\"on\"\n          >\n            <TextField\n              id=\"email\"\n              label=\"Email\"\n              type=\"email\"\n              value={values.email.trim()}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={touched.email && Boolean(errors.email)}\n              helperText={touched.email && errors.email}\n            />\n            <TextField\n              id=\"password\"\n              label=\"Пароль\"\n              type=\"password\"\n              value={values.password.trim()}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={touched.password && Boolean(errors.password)}\n              helperText={touched.password && errors.password}\n            />\n            <TextField\n              id=\"confirmPassword\"\n              label=\"Підтвердити пароль\"\n              type=\"password\"\n              value={values.confirmPassword.trim()}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={touched.confirmPassword && Boolean(errors.confirmPassword)}\n              helperText={touched.confirmPassword && errors.confirmPassword}\n            />\n            <TextField\n              id=\"name\"\n              label=\"ім'я\"\n              value={values.name.trim()}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={touched.name && Boolean(errors.name)}\n              helperText={touched.name && errors.name}\n            />\n            <TextField\n              id=\"surname\"\n              label=\"Прізвище\"\n              value={values.surname.trim()}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={touched.surname && Boolean(errors.surname)}\n              helperText={touched.surname && errors.surname}\n            />\n            <TextField\n              id=\"phone\"\n              label=\"Телефон\"\n              type=\"tel\"\n              name=\"phone\"\n              placeholder=\"+38 (000) 000-0000\"\n              value={values.phone}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={touched.phone && Boolean(errors.phone)}\n              helperText={touched.phone && errors.phone}\n            />\n\n            <Button disabled={isSubmitting} type={'submit'}>\n              продовжити\n            </Button>\n          </RegisterForm>\n\n          <RegisterForm\n            className=\"lastRegisterForm visually-hidden\"\n            onSubmit={handleSubmit}\n            autoComplete=\"on\"\n          >\n            <TextField\n              id=\"outlined-select-currency\"\n              select\n              label=\"Країна\"\n              name=\"country\"\n              value={values.country}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={touched.country && Boolean(errors.country)}\n              helperText={touched.country && errors.country}\n            >\n              {countries.map(option => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n\n            <TextField\n              id=\"outlined-select-currency\"\n              select\n              label=\"Область\"\n              name=\"region\"\n              value={values.region}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={touched.region && Boolean(errors.region)}\n              helperText={touched.region && errors.region}\n            >\n              {regions.map(option => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n\n            <TextField\n              id=\"city\"\n              label=\"Місто\"\n              value={values.city.trim()}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={touched.city && Boolean(errors.city)}\n              helperText={touched.city && errors.city}\n            />\n\n            <TextField\n              id=\"index\"\n              label=\"Індекс\"\n              value={values.index.trim()}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={touched.index && Boolean(errors.index)}\n              helperText={touched.index && errors.index}\n            />\n\n            <TextField\n              id=\"post\"\n              label=\"Відділення Нової пошти\"\n              value={values.post.trim()}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={touched.post && Boolean(errors.post)}\n              helperText={touched.post && errors.post}\n            />\n\n            <Button disabled={isSubmitting} type={'submit'}>\n              Зареєструватися\n            </Button>\n            <Button type={'button'} onClick={handleReturn}>\n              Повернутися\n            </Button>\n          </RegisterForm>\n        </FormsContainer>\n      </Container>\n      <Footer />\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["UnderlineAfter","TextFieldStyle","styled","TextField","props","theme","fonts","body","headers","colors","accentActive","accent","accentRed","TextMaskCustom","React","ref","onChange","other","mask","definitions","inputRef","onAccept","value","target","name","overwrite","variant","id","label","type","placeholder","onBlur","error","helperText","select","multiline","rows","children","fullWidth","InputProps","inputComponent","TitleStyle","screens","tablet","Line","countries","regions","passwordRules","number","LoginSchema","yup","email","required","password","min","matches","RegisterSchema","confirmPassword","oneOf","surname","phone","country","region","city","index","length","post","AddProductSchema","title","price","volume","brand","categorie","markers","new","available","shortDescription","fullDescription","cleaningObject","obj","propName","undefined","WarningMessage","FormsContainer","RegisterForm","useRegisterMutation","register","res","useState","finishFirstForm","setFinishFirstForm","firstRegisterForm","document","getElementsByClassName","lastRegisterForm","toggleForm","classList","add","remove","onSubmit","restValues","replace","submitValues","console","log","useFormik","initialValues","validationSchema","values","handleSubmit","handleChange","handleBlur","isSubmitting","touched","errors","Container","Title","to","className","autoComplete","trim","Boolean","Button","disabled","option","MenuItem","onClick","Footer"],"sourceRoot":""}