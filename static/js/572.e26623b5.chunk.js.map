{"version":3,"file":"static/js/572.e26623b5.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","components/Loader/Loader.jsx","components/TextField/TextField.styled.jsx","components/TextField/TextField.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","helpers/ValidationShemas.js","components/Button/Link.jsx","pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import icons from 'images/icons.svg';\nimport { ButtonStyle } from './Button.styled';\n\nconst Button = ({ type = 'button', iconId, children }) => {\n  return (\n    <ButtonStyle type={type}>\n      {iconId && (\n        <svg>\n          <use href={icons + `#${iconId}`}></use>\n        </svg>\n      )}\n      {children}\n    </ButtonStyle>\n  );\n};\n\nexport default Button;\n","import { Hearts } from 'react-loader-spinner';\n\nconst Loader = ({ margin = '100px 0 0 0' }) => {\n  return (\n    <Hearts\n      height=\"100\"\n      width=\"100%\"\n      color=\"#bade9c\"\n      ariaLabel=\"hearts-loading\"\n      wrapperStyle={{ margin: margin }}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\nimport { TextField } from '@mui/material';\n\nexport const TextFieldStyle = styled(TextField)`\n  input {\n    font-family: ${props => props.theme.fonts.body};\n    font-size: 15px;\n  }\n  label {\n    font-family: ${props => props.theme.fonts.headers};\n    font-weight: 700;\n    font-size: 14px;\n    text-transform: uppercase;\n    color: ${props => props.theme.colors.accentActive};\n  }\n  label.Mui-focused {\n    color: ${props => props.theme.colors.accent};\n  }\n  .MuiInput-underline:after {\n    border-bottom-color: ${props => props.theme.colors.accentActive};\n  }\n  .MuiOutlinedInput-root {\n    fieldset {\n      border-color: ${props => props.theme.colors.accentRed};\n    }\n    :hover fieldset {\n      border-color: yellow;\n    }\n    .Mui-focused fieldset {\n      border-color: ${props => props.theme.colors.accentActive};\n    }\n  }\n`;\n","import { TextFieldStyle } from './TextField.styled';\n\nconst TextField = ({\n  variant = 'standard',\n  id = 'text',\n  label = 'text',\n  type = 'text',\n  value = '',\n  placeholder = '',\n  onChange,\n  onBlur,\n  error = false,\n  helperText = '',\n}) => {\n  return (\n    <TextFieldStyle\n      variant={variant}\n      fullWidth\n      id={id}\n      label={label}\n      type={type}\n      value={value}\n      placeholder={placeholder}\n      onChange={onChange}\n      onBlur={onBlur}\n      error={error}\n      helperText={helperText}\n    />\n  );\n};\n\nexport default TextField;\n","import styled from 'styled-components';\n\nexport const TitleStyle = styled.span`\n  display: inline-block;\n  margin-top: 50px;\n  font-size: 25px;\n  font-weight: 700;\n  letter-spacing: 0.02em;\n  font-family: ${props => props.theme.fonts.headers};\n  color: ${props => props.theme.colors.accentActive};\n  @media ${props => props.theme.screens.tablet} {\n    font-size: 30px;\n  }\n`;\n\nexport const Line = styled.div`\n  margin-top: 20px;\n  width: 100%;\n  height: 2px;\n  background-color: ${props => props.theme.colors.accent};\n`;\n","import { TitleStyle, Line } from './Title.styled';\n\nconst Title = ({ children }) => {\n  return (\n    <>\n      <TitleStyle>{children}</TitleStyle>\n      <Line />\n    </>\n  );\n};\n\nexport default Title;\n","import * as yup from 'yup';\n\nconst passwordRules =\n  /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/;\n\nexport const LoginSchema = yup.object({\n  email: yup\n    .string('Введіть адресу електронної пошти')\n    .email('Введіть валідну адресу електронної пошти')\n    .required(\"Поле обов'язкове для заповнення\"),\n  password: yup\n    .string('Введіть пароль')\n    .min(8, 'Пароль має бути мінімум 8 символів')\n    .matches(\n      passwordRules,\n      'Пароль має містити хоча б одину велику літеру, одну цифру та один спеціальний символ'\n    )\n    .required(\"Поле обов'язкове для заповнення\"),\n});\n\nexport const RegisterSchema = yup.object({\n  email: yup\n    .string('Введіть адресу електронної пошти')\n    .email('Введіть валідну адресу електронної пошти')\n    .required(\"Поле обов'язкове для заповнення\"),\n\n  password: yup\n    .string('Введіть пароль')\n    .min(8, 'Пароль має бути мінімум 8 символів')\n    .matches(\n      passwordRules,\n      'Пароль має містити хоча б одину велику літеру, одну цифру та один спеціальний символ'\n    )\n    .required(\"Поле обов'язкове для заповнення\"),\n\n  confirmPassword: yup\n    .string('Повторіть пароль')\n    .oneOf([yup.ref('password'), null], 'пароль має співпадати')\n    .required(\"Поле обов'язкове для заповнення\"),\n\n  name: yup\n    .string(\"Введіть ім'я\")\n    .min(2, \"Ім'я має містити мінімум 2 символа\")\n    .required(\"Поле обов'язкове для заповнення\"),\n\n  surname: yup\n    .string('Введіть прізвище')\n    .required(\"Поле обов'язкове для заповнення\"),\n});\n","import { LinkStyle } from './Button.styled';\n\nexport { LinkStyle } from './Button.styled';\n\nconst Link = ({ link, children }) => {\n  return <LinkStyle to={link}>{children}</LinkStyle>;\n};\n\nexport default Link;\n","import styled from 'styled-components';\n\nexport const LoginGrid = styled.div`\n  margin-top: 60px;\n  @media ${props => props.theme.screens.tablet} {\n    display: flex;\n  }\n`;\n\nexport const LoginWrap = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  position: relative;\n  padding: 10px;\n  margin-bottom: 15px;\n  background-color: ${props => props.theme.colors.accentLight};\n  border: solid 2px ${props => props.theme.colors.accentActive};\n  svg {\n    height: 45px;\n    width: 45px;\n    margin-right: 15px;\n    @media ${props => props.theme.screens.tablet} {\n      height: 60px;\n      width: 60px;\n      margin-right: 30px;\n    }\n  }\n  span {\n    display: flex;\n    flex-basis: calc(100% - 60px);\n    font-family: ${props => props.theme.fonts.body};\n    font-size: 19px;\n    font-weight: 500;\n    @media ${props => props.theme.screens.tablet} {\n      font-size: 22px;\n      flex-basis: calc(100% - 90px);\n    }\n  }\n  button,\n  a {\n    margin-top: auto;\n  }\n\n  @media ${props => props.theme.screens.tablet} {\n    flex-basis: calc(50% - 23px / 2);\n    margin-bottom: 40px;\n    :first-child {\n      margin-right: 15px;\n    }\n  }\n`;\n\nexport const ExplainingText = styled.p`\n  margin-top: 15px;\n  margin-bottom: 20px;\n  font-size: 14px;\n  @media ${props => props.theme.screens.tablet} {\n    font-size: 16px;\n  }\n`;\n\nexport const LoginForm = styled.form`\n  width: 100%;\n  margin-top: 15px;\n  .css-wb57ya-MuiFormControl-root-MuiTextField-root {\n    margin-bottom: 10px;\n  }\n  button {\n    margin-top: 20px;\n  }\n  @media ${props => props.theme.screens.tablet} {\n    margin-top: 40px;\n  }\n`;\n\nexport const ErrorMesage = styled.p`\n  margin-bottom: 15px;\n  color: ${props => props.theme.colors.accentRed};\n`;\nexport const LoadingContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: -12px;\n  @media ${props => props.theme.screens.tablet} {\n    margin-top: -27px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useLoginMutation } from '../../redux/Auth/authApi';\n\nimport { useFormik } from 'formik';\nimport Container from 'components/Container/Container';\nimport Footer from 'components/Footer/Footer';\nimport Title from 'components/Title/Title';\nimport icons from 'images/icons.svg';\nimport TextField from 'components/TextField/TextField';\nimport Button from 'components/Button/Button';\nimport Link from 'components/Button/Link';\nimport Loader from 'components/Loader/Loader';\n\nimport { LoginSchema } from 'helpers/ValidationShemas';\n\nimport {\n  LoginGrid,\n  LoginWrap,\n  ExplainingText,\n  LoginForm,\n  LoadingContainer,\n  ErrorMesage,\n} from './LoginPage.styled';\n\nconst LoginPage = () => {\n  const [login, { isError, isLoading, isSuccess }] = useLoginMutation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isSuccess) {\n      navigate('/mycabinet', { replace: true });\n    }\n  }, [isSuccess, navigate]);\n\n  const onSubmit = async (values /*, actions*/) => {\n    await login(values);\n    // await new Promise(resolve => setTimeout(resolve, 1000));\n    // actions.resetForm();\n  };\n\n  const {\n    values,\n    errors,\n    touched,\n    isSubmitting,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n  } = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: LoginSchema,\n    onSubmit,\n  });\n\n  return (\n    <>\n      <Container>\n        <Title>Авторизація</Title>\n        <LoginGrid>\n          <LoginWrap>\n            <svg>\n              <use href={icons + '#user-plus'}></use>\n            </svg>\n            <span>Реєстрація</span>\n            <ExplainingText>\n              Після реєстрації ви зможете швидше здійснювати замовлення,\n              зберігати обрані товари та історії замовлень.\n            </ExplainingText>\n            <Link link={'/register'}>продовжити</Link>\n          </LoginWrap>\n          <LoginWrap>\n            <svg>\n              <use href={icons + '#street-view'}></use>\n            </svg>\n            <span>Увійти до особистого кабінету</span>\n            <LoginForm onSubmit={handleSubmit} autoComplete=\"off\">\n              {isError && (\n                <ErrorMesage>\n                  Невірно вказані поле E-Mail і/або пароль!\n                </ErrorMesage>\n              )}\n              {isLoading && (\n                <LoadingContainer>\n                  <Loader margin={'0'} />\n                </LoadingContainer>\n              )}\n\n              <TextField\n                variant=\"standard\"\n                fullWidth\n                id=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.email && Boolean(errors.email)}\n                helperText={touched.email && errors.email}\n              />\n              <TextField\n                variant=\"standard\"\n                fullWidth\n                id=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                value={values.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.password && Boolean(errors.password)}\n                helperText={touched.password && errors.password}\n              />\n              <Button disabled={isSubmitting} type={'submit'}>\n                Увійти\n              </Button>\n            </LoginForm>\n          </LoginWrap>\n        </LoginGrid>\n      </Container>\n      <Footer />\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["type","iconId","children","href","icons","margin","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","TextFieldStyle","styled","TextField","props","theme","fonts","body","headers","colors","accentActive","accent","accentRed","variant","id","label","value","placeholder","onChange","onBlur","error","helperText","fullWidth","TitleStyle","screens","tablet","Line","passwordRules","LoginSchema","yup","email","required","password","min","matches","RegisterSchema","confirmPassword","oneOf","name","surname","link","to","LoginGrid","LoginWrap","accentLight","ExplainingText","LoginForm","ErrorMesage","LoadingContainer","useLoginMutation","login","isError","isLoading","isSuccess","navigate","useNavigate","useEffect","replace","onSubmit","values","useFormik","initialValues","validationSchema","errors","touched","isSubmitting","handleBlur","handleChange","handleSubmit","Container","Title","autoComplete","Loader","Boolean","Button","disabled","Footer"],"sourceRoot":""}